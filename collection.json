{
	"info": {
		"_postman_id": "d0d1c86c-8f08-4ee9-90c0-630d4e0eacc3",
		"name": "Booking request flow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18955236"
	},
	"item": [
		{
			"name": "Create independence booking request and then auto decline it",
			"item": [
				{
					"name": "authorize as guest1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking hourly1\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking hourly1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create hourly booking request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"postman.setNextRequest(\"update-execute-all-custom-query1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023/02/22\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13528,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request"
							]
						},
						"description": "UPDATED For `daily` type fill `dateKey, dateStart, dateEnd`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `dateStart, hours_start, hours_end`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `dateStart, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": 86998066,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 12417,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-execute-all-custom-query1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update-execute-all-custom-query (reminders and autodecline request query) - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-execute-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Executng cron script to send reminders and autodecline request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user requests info (check is declined)1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"declined\");",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(\"authorize as guest2\")",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create independence booking request and then cancel it (pending status)(tenant)",
			"item": [
				{
					"name": "authorize as guest2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking daily2\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking daily2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create daily booking request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"postman.setNextRequest(\"cancel request by ID2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023/02/22\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13528,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request"
							]
						},
						"description": "UPDATED For `daily` type fill `dateKey, dateStart, dateEnd`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `dateStart, hours_start, hours_end`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `dateStart, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": 86998066,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 12417,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cancel request by ID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Guest cancel request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is canceled)2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/cancel/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"cancel",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "cancel request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/cancel/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"cancel",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is canceled)2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is canceled\", function () {",
									"    let jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"canceled\");",
									"                console.log(jsonData.data[i].status)",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create independence booking request and then cancel it after approve(host)",
			"item": [
				{
					"name": "authorize as guest3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking monthly3\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking monthly3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create monthly booking request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"postman.setNextRequest(\"authorize as host3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"01/22/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023/01/22\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"123\",\n  \"number_months\": 4,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13528,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"monthly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request"
							]
						},
						"description": "UPDATED For `daily` type fill `dateKey, dateStart, dateEnd`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `dateStart, hours_start, hours_end`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `dateStart, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": 86998066,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 12417,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is approved)3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is approved\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"confirmed\");",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have MakeDelayedPayment', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query[0].action).to.eql(\"MakeDelayedPayment\");",
									"});",
									"",
									"pm.test('Check custom query - Query have SendMoneyToHost', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    for(var i = 0; i < jsonData.query.length; i++) {",
									"        pm.expect(jsonData.query[jsonData.query.length - 1].action).to.eql(\"SendMoneyToHost\");",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"decline request by ID3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "decline request by ID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host decline request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/decline/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"decline",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "decline request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/decline/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"decline",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is declined)3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"declined\");",
									"                console.log(jsonData.data[i].bookings[j].status)",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 3\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query2 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create independence booking request and then cancel it after approve(tenant)",
			"item": [
				{
					"name": "authorize as guest4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking hourly4\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking hourly4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create hourly booking request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"postman.setNextRequest(\"authorize as host4\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13528,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request"
							]
						},
						"description": "UPDATED For `daily` type fill `dateKey, dateStart, dateEnd`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `dateStart, hours_start, hours_end`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `dateStart, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": 86998066,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 12417,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID4\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)4\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is approved)4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is approved\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"confirmed\");",
									"                console.log(jsonData.data[i].status)",
									"            }",
									"    }",
									"});",
									"",
									"if (pm.variables.get(\"role_id\") == 2){",
									"    postman.setNextRequest(\"authorize as guest after approve4\");",
									"} else {",
									"    postman.setNextRequest(\"decline request by ID4\");",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as guest after approve4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest after approve - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)4\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "decline request by ID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Guest decline request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)4\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/decline/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"decline",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "decline request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/decline/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"decline",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is declined)4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"declined\");",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create independence booking request positive",
			"item": [
				{
					"name": "authorize as guest5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking monthly5\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking monthly5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create monthly booking request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"postman.setNextRequest(\"authorize as host5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"01/22/2024\",\n  \"date_end\": \"\",\n  \"date_start\": \"2024-01-22\",\n  \"expiryDate\": \"11/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"123\",\n  \"number_months\": 5,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13528,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"monthly\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request"
							]
						},
						"description": "UPDATED For `daily` type fill `dateKey, dateStart, dateEnd`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `dateStart, hours_start, hours_end`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `dateStart, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"dasha\",\n  \"category\": \"\",\n  \"city\": \"Schenectady\",\n  \"country\": \"USA\",\n  \"cvv\": \"123\",\n  \"dateKey\": \"1100AM-1200AM; 01/17/2023\",\n  \"date_end\": \"\",\n  \"date_start\": \"2023-01-17\",\n  \"expiryDate\": \"11/23\",\n  \"hours_end\": \"0000\",\n  \"hours_start\": \"1100\",\n  \"message\": \"123\",\n  \"number_months\": 86998066,\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 12417,\n  \"policy\": true,\n  \"postcode\": \"12345\",\n  \"stateLegal\": \"AK\",\n  \"type\": \"hourly\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is approved)5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is approved\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"confirmed\");",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"update-execute-send-money-to-host5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-execute-send-money-to-host5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-execute-send-money-to-host"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-send-money-to-host"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "select-all-custom-query5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have MakeDelayedPayment', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query[0].action).to.eql(\"MakeDelayedPayment\");",
									"});",
									"",
									"postman.setNextRequest('get-booking-transaction-status5');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get-booking-transaction-status5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check stripe transactions - Transaction status is confirmed\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.transaction.length; i++) {",
									"        if(jsonData.transaction[i].booking_id && jsonData.transaction[i].booking_id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.transaction[i].status).to.eql(\"Completed\");",
									"            }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"update-delayed-payments5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"get-booking-transaction-status"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"get-booking-transaction-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-delayed-payments5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send Delay money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications2 5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-delayed-payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-delayed-payments"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications2 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "select-all-custom-query2 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});",
									"",
									"postman.setNextRequest(\"update-finish-date-for-booking5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-finish-date-for-booking5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change start-end day booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"finish bookings5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-finish-date-for-booking"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-finish-date-for-booking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "finish bookings5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to completing booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check transaction status is confirmed\", function () {",
									"    var bookingId = pm.variables.get(\"booking_id\");",
									"    pm.expect(pm.response.text()).to.include(`Booking ${bookingId} completed`);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is completed)5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/finishBookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"finishBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user requests info (check is completed)5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status of booking is completed\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"completed\");",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query3 5\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query3 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create passes subscription positive case",
			"item": [
				{
					"name": "authorize as guest6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly6\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var today = new Date().toLocaleDateString('en-US');",
									"var date = new Date();",
									"var end_date = new Date(date.setMonth(date.getMonth()+1)).toLocaleDateString('en-US');",
									"",
									"pm.environment.set(\"start_day\", today);",
									"pm.environment.set(\"end_day\", end_date);",
									"",
									"// Need use actual current day for correct work test execution"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Create month subscription - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"    pm.environment.set(\"sub_id\", jsonData.subs[0].space.id);",
									"});",
									"",
									"postman.setNextRequest(\"authorize as host6\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"{{start_day}}\",\n        \"endDate\": \"{{end_day}}\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"{{start_day}}\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check state of subscription - Query have 2 items', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(2);",
									"});",
									"",
									"postman.setNextRequest('update-execute-send-money-to-host6');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-execute-send-money-to-host6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Imitate start day of subscription - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest('cron-notifications6');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-execute-send-money-to-host"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-send-money-to-host"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get-booking-transaction-status6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-booking-transaction-status6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check stripe transactions - Have one transaction at response\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.transaction.length).to.eql(1);",
									"});",
									"",
									"postman.setNextRequest(\"update-subscription-date6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"get-booking-transaction-status"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"get-booking-transaction-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-subscription-date6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Imitate regular payment transactions - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications2 6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-subscription-date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-subscription-date"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-subscription-date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-subscription-date"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications2 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get-booking-transaction-status2 6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-booking-transaction-status2 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check stripe transactions - Have two transactions at response\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.transaction.length).to.eql(2);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"get-booking-transaction-status"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"get-booking-transaction-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query2 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check creating next transaction - Query have one item', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(1);",
									"});",
									"",
									"postman.setNextRequest('update-finish-date-for-booking6');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-finish-date-for-booking6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change start-end day booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"finish bookings6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-finish-date-for-booking"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-finish-date-for-booking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "finish bookings6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to completing booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check transaction status is NOT completed\", function () {",
									"    var bookingId = pm.variables.get(\"booking_id\");",
									"    pm.expect(pm.response.text()).to.include(`Booking ${bookingId} <b>NOT completed</b>0 of 1`);",
									"});",
									"",
									"postman.setNextRequest(\"update-subscription-date recheck6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/finishBookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"finishBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-subscription-date recheck6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Imitate regular payment transactions - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications recheck6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-subscription-date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-subscription-date"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-subscription-date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-subscription-date"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications recheck6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get-booking-transaction-status recheck6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-booking-transaction-status recheck6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check stripe transactions - Have three transactions\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.transaction.length).to.eql(3);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query recheck6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"get-booking-transaction-status"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/get-booking-transaction-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"get-booking-transaction-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query recheck6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check creating next transaction - Query have one item', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(1);",
									"});",
									"",
									"postman.setNextRequest('authorize as guest2 6');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as guest2 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"cancel subscription6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cancel subscription6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Guest cancel subscription - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query3 6\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"booking\": {{booking_id}},\n  \"space\": {{sub_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/request/cancelsubscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"cancelsubscription"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"booking\": 671,\n  \"space\": 13428\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/request/cancelsubscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"cancelsubscription"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query3 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check cancel subscription state - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});",
									"",
									"postman.setNextRequest('finish bookings2 6');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "finish bookings2 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to completing booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check booking status is completed\", function () {",
									"    var bookingId = pm.variables.get(\"booking_id\");",
									"    pm.expect(pm.response.text()).to.include(`Booking ${bookingId} completed. 1:Items: 1`);",
									"});",
									"",
									"postman.setNextRequest(\"get user bookings info6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/finishBookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"finishBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user bookings info6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking status - Booking item have subscription canceled status\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].items.length; j++){",
									"            if(jsonData.data[i].items[j].booking_id && jsonData.data[i].items[j].booking_id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].items[j].status).to.eql(\"subscription canceled\");",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Check booking status - Booking have completed status\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"completed\");",
									"            }",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"bookings"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"bookings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Decline subscription after approve but before start",
			"item": [
				{
					"name": "authorize as guest7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create 5 months subscription - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"    pm.environment.set(\"sub_id\", jsonData.subs[0].space.id);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query7\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have 5 items', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(5);",
									"});",
									"",
									"postman.setNextRequest('authorize as host7');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID7\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 7\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query2 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have 2 items', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(2);",
									"});",
									"",
									"postman.setNextRequest('decline request by ID7');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "decline request by ID7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host decline request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query3 7\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/decline/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"decline",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "decline request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/decline/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"decline",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query3 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create hourly/daily/monthly booking request positive",
			"item": [
				{
					"name": "authorize as guest8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly/hourly/daily8\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly/hourly/daily8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create coworking request with hourly, daily, monthly(4) items - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"",
									"postman.setNextRequest(\"authorize as host8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"1\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/17/2023\",\n        \"endDate\": \"05/17/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 4,\n        \"startDate\": \"01/17/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    },\n    \"2\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/18/2023-01/19/2023\",\n        \"endDate\": \"01/19/2023\",\n        \"endTime\": \"\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"\",\n        \"type\": \"daily\"\n      }\n    },\n    \"3\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"1100AM-1100PM; 01/18/2023\",\n        \"endDate\": \"\",\n        \"endTime\": \"1100PM\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"1100AM\",\n        \"type\": \"hourly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"update-execute-send-money-to-host8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-execute-send-money-to-host8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest('cron-notifications8');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-execute-send-money-to-host"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-send-money-to-host",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-send-money-to-host"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "select-all-custom-query8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have MakeDelayedPayment', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.query.length; i++) {",
									"        pm.expect(jsonData.query[i].action).to.eql(\"MakeDelayedPayment\");",
									"    }",
									"});",
									"",
									"postman.setNextRequest('update-delayed-payments8');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-delayed-payments8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send Delay money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications2 8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-delayed-payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-delayed-payments"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications2 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to send delay money to host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "select-all-custom-query2 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});",
									"",
									"postman.setNextRequest('update-finish-date-for-booking8');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-finish-date-for-booking8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change start-end day booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"finish bookings8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-finish-date-for-booking"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-finish-date-for-booking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-finish-date-for-booking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "finish bookings8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Execute cron script to completing booking - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Booking is completed\", function () {",
									"    var bookingId = pm.variables.get(\"booking_id\");",
									"    pm.expect(pm.response.text()).to.include(`Booking ${bookingId} completed`);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/finishBookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"finishBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user requests info8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is completed\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++)",
									"        if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"completed\");",
									"            }",
									"    }",
									"});",
									"",
									"postman.setNextRequest('select-all-custom-query3 8');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query3 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create hourly/daily/monthly booking request and then auto decline it",
			"item": [
				{
					"name": "authorize as guest9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly/hourly/daily9\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly/hourly/daily9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create coworking request with hourly, daily, monthly(4) items - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"",
									"postman.setNextRequest(\"update-execute-all-custom-query9\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"1\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/17/2023\",\n        \"endDate\": \"05/17/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 4,\n        \"startDate\": \"01/17/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    },\n    \"2\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/18/2023-01/19/2023\",\n        \"endDate\": \"01/19/2023\",\n        \"endTime\": \"\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"\",\n        \"type\": \"daily\"\n      }\n    },\n    \"3\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"1100AM-1100PM; 01/18/2023\",\n        \"endDate\": \"\",\n        \"endTime\": \"1100PM\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"1100AM\",\n        \"type\": \"hourly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update-execute-all-custom-query9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update-execute-all-custom-query (reminders and autodecline request query) - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"cron-notifications9\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"update-execute-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/update-execute-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"update-execute-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cron-notifications9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Executng cron script to send reminders and autodecline request - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)9\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cron-notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cron-notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user requests info (check is declined)9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"declined\");",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create hourly/daily/monthly booking request and then cancel it (pending status)(tenant)",
			"item": [
				{
					"name": "authorize as guest10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly/hourly/daily10\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly/hourly/daily10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create coworking request with hourly, daily, monthly(4) items - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"",
									"postman.setNextRequest(\"cancel request by ID10\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"1\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/17/2023\",\n        \"endDate\": \"05/17/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 4,\n        \"startDate\": \"01/17/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    },\n    \"2\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/18/2023-01/19/2023\",\n        \"endDate\": \"01/19/2023\",\n        \"endTime\": \"\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"\",\n        \"type\": \"daily\"\n      }\n    },\n    \"3\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"1100AM-1100PM; 01/18/2023\",\n        \"endDate\": \"\",\n        \"endTime\": \"1100PM\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"1100AM\",\n        \"type\": \"hourly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "cancel request by ID10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Guest cancel request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is canceled)10\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/cancel/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"cancel",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "cancel request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/cancel/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"cancel",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is canceled)10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is canceled\", function () {",
									"    let jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"canceled\");",
									"                console.log(jsonData.data[i].status)",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create hourly/daily/monthly booking request and then cancel it after approve(tenant)",
			"item": [
				{
					"name": "authorize as guest11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly/hourly/daily11\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly/hourly/daily11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create coworking request with hourly, daily, monthly(4) items - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"",
									"postman.setNextRequest(\"authorize as host11\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"1\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/17/2023\",\n        \"endDate\": \"05/17/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 4,\n        \"startDate\": \"01/17/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    },\n    \"2\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/18/2023-01/19/2023\",\n        \"endDate\": \"01/19/2023\",\n        \"endTime\": \"\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"\",\n        \"type\": \"daily\"\n      }\n    },\n    \"3\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"1100AM-1100PM; 01/18/2023\",\n        \"endDate\": \"\",\n        \"endTime\": \"1100PM\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"1100AM\",\n        \"type\": \"hourly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID11\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)11\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is approved)11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is approved\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"confirmed\");",
									"                console.log(jsonData.data[i].status)",
									"            }",
									"    }",
									"});",
									"",
									"if (pm.variables.get(\"role_id\") == 2){",
									"    postman.setNextRequest(\"authorize as guest after approve11\");",
									"} else {",
									"    postman.setNextRequest(\"decline request by ID11\");",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as guest after approve11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest after approve - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)11\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "decline request by ID11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Guest decline request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)11\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/decline/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"decline",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "decline request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/decline/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"decline",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is declined)11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        if(jsonData.data[i].id && jsonData.data[i].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].status).to.eql(\"declined\");",
									"            }",
									"    }",
									"});",
									"",
									"//postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create hourly/daily/monthly booking request and then cancel it after approve(host)",
			"item": [
				{
					"name": "authorize as guest12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as guest - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"request booking(coworking) monthly/hourly/daily12\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var today = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDay()",
									"var tomorrow = new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + (new Date().getDay()+1)",
									"",
									"pm.environment.set(\"today_main\", today);",
									"pm.environment.set(\"tomorrow_main\", tomorrow);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{guest_password}}\",\n  \"username\": \"{{guest_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "request booking(coworking) monthly/hourly/daily12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create coworking request with hourly, daily, monthly(4) items - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set booking id to environment variable\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.booking.id);",
									"});",
									"",
									"",
									"postman.setNextRequest(\"authorize as host12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"1\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/17/2023\",\n        \"endDate\": \"05/17/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 4,\n        \"startDate\": \"01/17/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    },\n    \"2\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"01/18/2023-01/19/2023\",\n        \"endDate\": \"01/19/2023\",\n        \"endTime\": \"\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"\",\n        \"type\": \"daily\"\n      }\n    },\n    \"3\": {\n      \"id\": 13690,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 4400,\n      \"price_per_month\": 4400,\n      \"price_per_day\": 3300,\n      \"price_per_hour\": 2200,\n      \"qty\": 1,\n      \"kind\": \"private office\",\n      \"date\": {\n        \"dateKey\": \"1100AM-1100PM; 01/18/2023\",\n        \"endDate\": \"\",\n        \"endTime\": \"1100PM\",\n        \"number_months\": \"\",\n        \"startDate\": \"01/18/2023\",\n        \"startTime\": \"1100AM\",\n        \"type\": \"hourly\"\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking-request-coworking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking-request-coworking"
							]
						},
						"description": "UPDATED For `daily` cart date type fill `dateKey, startDate, endDate`, `dateKey` format `\"12/06/2022-12/08/2022\"`. For `hourly` type fill `startDate, statTime, endTime`. `dateKey` format `\"1000AM-0500PM; 12/06/2022\"`. For `monthly` type fill `startDate, number_months`"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressLine1\": \"123 State St\",\n  \"addressLine2\": \"test\",\n  \"cardNumber\": \"4242424242424242\",\n  \"cardholderName\": \"Full Name\",\n  \"category\": \"\",\n  \"city\": \"city\",\n  \"country\": \"USA\",\n  \"cvv\": \"424\",\n  \"dateKey\": \"\",\n  \"date_end\": \"\",\n  \"date_start\": \"\",\n  \"expiryDate\": \"12/24\",\n  \"hours_end\": \"\",\n  \"hours_start\": \"\",\n  \"message\": \"message\",\n  \"number_months\": \"\",\n  \"paymentMethod\": \"credit\",\n  \"placeId\": 13426,\n  \"policy\": true,\n  \"postcode\": \"12313\",\n  \"stateLegal\": \"AS\",\n  \"type\": \"\",\n  \"cart\": {\n    \"cartItem\": {\n      \"id\": 13428,\n      \"name\": \"name\",\n      \"applicationFee\": 9.5,\n      \"available_day_quantity\": 200,\n      \"available_month_quantity\": 10,\n      \"capturePrice\": 40000,\n      \"price_per_month\": 1000,\n      \"price_per_day\": 1000,\n      \"price_per_hour\": 1000,\n      \"qty\": 1,\n      \"kind\": \"hot desk\",\n      \"date\": {\n        \"dateKey\": \"01/11/2023\",\n        \"endDate\": \"02/11/2023\",\n        \"endTime\": \"\",\n        \"number_months\": 1,\n        \"startDate\": \"01/11/2023\",\n        \"startTime\": \"\",\n        \"type\": \"monthly\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/booking-request-coworking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"booking-request-coworking"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "authorize as host12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged in as host - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"authToken\", jsonData.authToken);",
									"    pm.environment.set(\"role_id\", jsonData.role_id);",
									"});",
									"",
									"postman.setNextRequest(\"approve request by ID12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"{{host_password}}\",\n  \"username\": \"{{host_login}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "approve request by ID12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host approve request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is approved)12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "approve request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/approve/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"approve",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is approved)12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is approved\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"confirmed\");",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query have MakeDelayedPayment', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query[0].action).to.eql(\"MakeDelayedPayment\");",
									"});",
									"",
									"pm.test('Check custom query - Query have SendMoneyToHost', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    for(var i = 0; i < jsonData.query.length; i++) {",
									"        pm.expect(jsonData.query[jsonData.query.length - 1].action).to.eql(\"SendMoneyToHost\");",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"decline request by ID12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "decline request by ID12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Host decline request by ID - Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest(\"get user requests info (check is declined)12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/request/decline/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"request",
								"decline",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "{{booking_id}}",
									"description": "(Required) request ID"
								}
							]
						},
						"description": "decline request by ID"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/request/decline/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"request",
										"decline",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "-60448588",
											"description": "(Required) request ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get user requests info (check is declined)12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check booking request status is declined\", function () {",
									"    let jsonData = pm.response.json();",
									"    ",
									"    for (var i = 0; i < jsonData.data.length; i++) {",
									"        for (var j = 0; j < jsonData.data[i].bookings.length; j++) {",
									"            if(jsonData.data[i].bookings[j].id && jsonData.data[i].bookings[j].id == pm.variables.get(\"booking_id\")) {",
									"                pm.expect(jsonData.data[i].bookings[j].status).to.eql(\"declined\");",
									"                console.log(jsonData.data[i].bookings[j].status)",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"postman.setNextRequest(\"select-all-custom-query2 12\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "select-all-custom-query2 12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Check custom query - Query is empty', function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.query.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": {{booking_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autotests/select-all-custom-query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autotests",
								"select-all-custom-query"
							]
						},
						"description": "UPDATED"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookingId\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autotests/select-all-custom-query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autotests",
										"select-all-custom-query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create_new test run",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test('Write `id` run to env', function () {",
							"//        var responseJson = JSON.parse(responseBody)",
							"//        var temp_run = responseJson.result.id",
							"//    pm.environment.set('id_run', temp_run)",
							"//    })"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setNextRequest(null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "value",
							"value": "662083c9ecc566fd0cb6798b3838e3a5d7c30507178190a9b5f7ac36d7f65562",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Example of test run creation\",\n  \"description\": \"description\",\n  \"include_all_cases\": false\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrlQ}}/run/{{code}}",
					"host": [
						"{{baseUrlQ}}"
					],
					"path": [
						"run",
						"{{code}}"
					]
				}
			},
			"response": [
				{
					"name": "Create_new test run",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Example of test run creation\",\n  \"description\": \"description\",\n  \"include_all_cases\": false\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlQ}}/run/{{code}}",
							"host": [
								"{{baseUrlQ}}"
							],
							"path": [
								"run",
								"{{code}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "ADD_new_host",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setNextRequest(null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n    \"role\": 1,\n    \"firstName\": \"Test\",\n    \"lastName\": \"Postman\",\n    \"email\": \"andrew.test.mail.25+35@gmail.com\",\n    \"password\": \"Qwerty123@\",\n    \"passwordConfirm\": \"Qwerty123@\",\n    \"policy\": true,\n    \"phoneNumber\": \"113425341111153311\",\n    \"code\": \"111111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://devadmin.officeexchange.com/api/v.1.0/register",
					"protocol": "https",
					"host": [
						"devadmin",
						"officeexchange",
						"com"
					],
					"path": [
						"api",
						"v.1.0",
						"register"
					]
				}
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"Pa$5w0Rd\",\n  \"username\": \"user@na.me\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://devadmin.officeexchange.com/api/v.1.0",
			"type": "string"
		}
	]
}